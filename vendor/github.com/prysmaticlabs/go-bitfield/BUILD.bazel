load("@bazel_gazelle//:def.bzl", "gazelle")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "nogo")

# gazelle:prefix github.com/prysmaticlabs/go-bitfield
gazelle(
    name = "gazelle",
    prefix = "github.com/prysmaticlabs/go-bitfield",
)

nogo(
    name = "nogo",
    visibility = ["//visibility:public"],
    # Some checks fail in gazelle itself. See: https://github.com/bazelbuild/bazel-gazelle/issues/568
    # Once that issue is resolved, this config can be removed.
    config = "nogo_config.json",
    deps = [
        "@org_golang_x_tools//go/analysis/passes/unsafeptr:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/unreachable:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/unmarshal:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/tests:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/structtag:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/stdmethods:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/shift:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/shadow:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/printf:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/pkgfact:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/nilness:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/nilfunc:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/lostcancel:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/loopclosure:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/httpresponse:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/findcall:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/deepequalerrors:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/ctrlflow:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/copylock:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/composite:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/cgocall:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/buildtag:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/buildssa:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/bools:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/atomicalign:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/atomic:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/assign:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/inspect:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/asmdecl:go_tool_library",
    ],
)

go_library(
    name = "go_default_library",
    srcs = [
        "bitfield.go",
        "bitlist.go",
        "bitlist64.go",
        "bitvector128.go",
        "bitvector256.go",
        "bitvector32.go",
        "bitvector4.go",
        "bitvector512.go",
        "bitvector64.go",
        "bitvector8.go",
        "doc.go",
        "errors.go",
        "min.go",
    ],
    importpath = "github.com/prysmaticlabs/go-bitfield",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "bitlist64_test.go",
        "bitlist_bench_test.go",
        "bitlist_test.go",
        "bitvector128_test.go",
        "bitvector256_test.go",
        "bitvector32_test.go",
        "bitvector4_test.go",
        "bitvector512_test.go",
        "bitvector64_test.go",
        "bitvector8_test.go",
    ],
    embed = [":go_default_library"],
    race = "on",
)
